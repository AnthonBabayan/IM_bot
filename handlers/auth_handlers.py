from telegram import Update
from telegram.ext import ContextTypes
from auth import check_email_in_ldap, get_user_info_from_ldap, generate_code, send_code_to_email, save_code, verify_code_and_issue_token, is_user_authorized
from keyboards import get_main_menu
from constants import SELECT_TYPE, AUTH_EMAIL, AUTH_CODE

async def auth_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_id = update.effective_user.id if update.effective_user else None
    if user_id and is_user_authorized(user_id):
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É –¢–ù–°-–†–£!\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è:",
            reply_markup=get_main_menu()
        )
        return SELECT_TYPE
    await update.message.reply_text("–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–∞–±–æ—á–∏–π email:")
    return AUTH_EMAIL


async def auth_email_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    email = update.message.text.strip()
    user_id = update.message.from_user.id
    if not check_email_in_ldap(email):
        await update.message.reply_text("Email –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞–∑–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
        return AUTH_EMAIL
    fio, location = get_user_info_from_ldap(email)
    context.user_data['fio'] = fio
    context.user_data['location'] = location
    context.user_data['email'] = email
    code = generate_code()
    send_code_to_email(email, code)
    save_code(user_id, email, code)
    await update.message.reply_text(f"–ù–∞ –≤–∞—à—É –ø–æ—á—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:")
    return AUTH_CODE


async def auth_code_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    code = update.message.text.strip()
    user_id = update.message.from_user.id
    ok, result = verify_code_and_issue_token(user_id, code)
    if ok:
        context.user_data.clear()
        await update.message.reply_text(
            "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.\n\n"
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É –¢–ù–°-–†–£!\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è:",
            reply_markup=get_main_menu()
        )
        return SELECT_TYPE
    else:
        await update.message.reply_text(f"‚ùóÔ∏è –û—à–∏–±–∫–∞: {result}\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –µ—â—ë —Ä–∞–∑:")
        return AUTH_CODE 